# main.py - autogenerated
from direct.showbase.ShowBase import ShowBase
from panda3d.core import Point3, Vec3, KeyboardButton
from direct.task import Task
from hud import HUD
import config

import math

class FlightSim(ShowBase):
    def __init__(self):
        super().__init__()

        self.disableMouse()  # Manual camera control
        self.setBackgroundColor(0.5, 0.7, 1.0)

        # Load aircraft model
        self.plane = self.loader.loadModel("models/aircraft.egg")  # Replace with your model
        self.plane.reparentTo(self.render)
        self.plane.setScale(0.5)
        self.plane.setPos(0, 0, 10)

        # Camera setup
        self.camera.setPos(0, -50, 15)
        self.camera.lookAt(self.plane)

        # Flight state
        self.pitch = 0
        self.speed = 10

        # Input tracking
        self.accept("arrow_up", self.increase_pitch)
        self.accept("arrow_down", self.decrease_pitch)
        self.accept("arrow_right", self.turn_right)
        self.accept("arrow_left", self.turn_left)

        # Update loop
        self.taskMgr.add(self.update_flight, "FlightUpdate")

        #Background
        self.setBackgroundColor(*config.BACKGROUND_COLOR)
        self.hud = HUD()

    def increase_pitch(self): self.pitch += 1
    def decrease_pitch(self): self.pitch -= 1
    def turn_right(self): self.plane.setH(self.plane.getH() - 5)
    def turn_left(self): self.plane.setH(self.plane.getH() + 5)

    def update_flight(self, task):
        dt = globalClock.getDt()
        angle_rad = math.radians(self.pitch)
        dz = self.speed * math.sin(angle_rad) * dt
        dy = self.speed * math.cos(angle_rad) * dt
        self.hud.update(self.plane.getZ(), self.pitch, self.speed)

        self.plane.setZ(self.plane.getZ() + dz)
        self.plane.setY(self.plane.getY() + dy)
        self.camera.lookAt(self.plane)

        return Task.cont

app = FlightSim()
app.run()